// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.12
// source: base.proto

package transport

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MarkType int32

const (
	MarkType_MARK_TYPE_UNSPECIFIED MarkType = 0
	MarkType_MARK_TYPE_CROSS       MarkType = 1
	MarkType_MARK_TYPE_NOUGHT      MarkType = 2
)

// Enum value maps for MarkType.
var (
	MarkType_name = map[int32]string{
		0: "MARK_TYPE_UNSPECIFIED",
		1: "MARK_TYPE_CROSS",
		2: "MARK_TYPE_NOUGHT",
	}
	MarkType_value = map[string]int32{
		"MARK_TYPE_UNSPECIFIED": 0,
		"MARK_TYPE_CROSS":       1,
		"MARK_TYPE_NOUGHT":      2,
	}
)

func (x MarkType) Enum() *MarkType {
	p := new(MarkType)
	*p = x
	return p
}

func (x MarkType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MarkType) Descriptor() protoreflect.EnumDescriptor {
	return file_base_proto_enumTypes[0].Descriptor()
}

func (MarkType) Type() protoreflect.EnumType {
	return &file_base_proto_enumTypes[0]
}

func (x MarkType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MarkType.Descriptor instead.
func (MarkType) EnumDescriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{0}
}

type ClientAction int32

const (
	ClientAction_CLIENT_ACTION_LEAVE   ClientAction = 0
	ClientAction_CLIENT_ACTION_GIVE_UP ClientAction = 1
)

// Enum value maps for ClientAction.
var (
	ClientAction_name = map[int32]string{
		0: "CLIENT_ACTION_LEAVE",
		1: "CLIENT_ACTION_GIVE_UP",
	}
	ClientAction_value = map[string]int32{
		"CLIENT_ACTION_LEAVE":   0,
		"CLIENT_ACTION_GIVE_UP": 1,
	}
)

func (x ClientAction) Enum() *ClientAction {
	p := new(ClientAction)
	*p = x
	return p
}

func (x ClientAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientAction) Descriptor() protoreflect.EnumDescriptor {
	return file_base_proto_enumTypes[1].Descriptor()
}

func (ClientAction) Type() protoreflect.EnumType {
	return &file_base_proto_enumTypes[1]
}

func (x ClientAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientAction.Descriptor instead.
func (ClientAction) EnumDescriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{1}
}

type GameStatus int32

const (
	GameStatus_GAME_STATUS_UNSPECIFIED  GameStatus = 0
	GameStatus_GAME_STATUS_OK           GameStatus = 1
	GameStatus_GAME_STATUS_TIE          GameStatus = 2
	GameStatus_GAME_STATUS_GAME_STARTED GameStatus = 3
)

// Enum value maps for GameStatus.
var (
	GameStatus_name = map[int32]string{
		0: "GAME_STATUS_UNSPECIFIED",
		1: "GAME_STATUS_OK",
		2: "GAME_STATUS_TIE",
		3: "GAME_STATUS_GAME_STARTED",
	}
	GameStatus_value = map[string]int32{
		"GAME_STATUS_UNSPECIFIED":  0,
		"GAME_STATUS_OK":           1,
		"GAME_STATUS_TIE":          2,
		"GAME_STATUS_GAME_STARTED": 3,
	}
)

func (x GameStatus) Enum() *GameStatus {
	p := new(GameStatus)
	*p = x
	return p
}

func (x GameStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_base_proto_enumTypes[2].Descriptor()
}

func (GameStatus) Type() protoreflect.EnumType {
	return &file_base_proto_enumTypes[2]
}

func (x GameStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameStatus.Descriptor instead.
func (GameStatus) EnumDescriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{2}
}

type StopCause int32

const (
	StopCause_STOP_CAUSE_UNSPECIFIED  StopCause = 0
	StopCause_STOP_CAUSE_DISCONNECT   StopCause = 1
	StopCause_STOP_CAUSE_LEAVE        StopCause = 2
	StopCause_STOP_CAUSE_INVALID_MOVE StopCause = 3
	StopCause_STOP_CAUSE_INTERNAL     StopCause = 4
)

// Enum value maps for StopCause.
var (
	StopCause_name = map[int32]string{
		0: "STOP_CAUSE_UNSPECIFIED",
		1: "STOP_CAUSE_DISCONNECT",
		2: "STOP_CAUSE_LEAVE",
		3: "STOP_CAUSE_INVALID_MOVE",
		4: "STOP_CAUSE_INTERNAL",
	}
	StopCause_value = map[string]int32{
		"STOP_CAUSE_UNSPECIFIED":  0,
		"STOP_CAUSE_DISCONNECT":   1,
		"STOP_CAUSE_LEAVE":        2,
		"STOP_CAUSE_INVALID_MOVE": 3,
		"STOP_CAUSE_INTERNAL":     4,
	}
)

func (x StopCause) Enum() *StopCause {
	p := new(StopCause)
	*p = x
	return p
}

func (x StopCause) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StopCause) Descriptor() protoreflect.EnumDescriptor {
	return file_base_proto_enumTypes[3].Descriptor()
}

func (StopCause) Type() protoreflect.EnumType {
	return &file_base_proto_enumTypes[3]
}

func (x StopCause) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StopCause.Descriptor instead.
func (StopCause) EnumDescriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{3}
}

type Move struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Row uint32 `protobuf:"varint,1,opt,name=row,proto3" json:"row,omitempty"`
	Col uint32 `protobuf:"varint,2,opt,name=col,proto3" json:"col,omitempty"`
}

func (x *Move) Reset() {
	*x = Move{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Move) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Move) ProtoMessage() {}

func (x *Move) ProtoReflect() protoreflect.Message {
	mi := &file_base_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Move.ProtoReflect.Descriptor instead.
func (*Move) Descriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{0}
}

func (x *Move) GetRow() uint32 {
	if x != nil {
		return x.Row
	}
	return 0
}

func (x *Move) GetCol() uint32 {
	if x != nil {
		return x.Col
	}
	return 0
}

type GameParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows uint32   `protobuf:"varint,1,opt,name=rows,proto3" json:"rows,omitempty"`
	Cols uint32   `protobuf:"varint,2,opt,name=cols,proto3" json:"cols,omitempty"`
	Win  uint32   `protobuf:"varint,3,opt,name=win,proto3" json:"win,omitempty"`
	Mark MarkType `protobuf:"varint,4,opt,name=mark,proto3,enum=base.MarkType" json:"mark,omitempty"`
}

func (x *GameParams) Reset() {
	*x = GameParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameParams) ProtoMessage() {}

func (x *GameParams) ProtoReflect() protoreflect.Message {
	mi := &file_base_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameParams.ProtoReflect.Descriptor instead.
func (*GameParams) Descriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{1}
}

func (x *GameParams) GetRows() uint32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

func (x *GameParams) GetCols() uint32 {
	if x != nil {
		return x.Cols
	}
	return 0
}

func (x *GameParams) GetWin() uint32 {
	if x != nil {
		return x.Win
	}
	return 0
}

func (x *GameParams) GetMark() MarkType {
	if x != nil {
		return x.Mark
	}
	return MarkType_MARK_TYPE_UNSPECIFIED
}

type WinLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mark  MarkType `protobuf:"varint,1,opt,name=mark,proto3,enum=base.MarkType" json:"mark,omitempty"`
	Start *Move    `protobuf:"bytes,2,opt,name=start,proto3,oneof" json:"start,omitempty"`
	End   *Move    `protobuf:"bytes,3,opt,name=end,proto3,oneof" json:"end,omitempty"`
}

func (x *WinLine) Reset() {
	*x = WinLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WinLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WinLine) ProtoMessage() {}

func (x *WinLine) ProtoReflect() protoreflect.Message {
	mi := &file_base_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WinLine.ProtoReflect.Descriptor instead.
func (*WinLine) Descriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{2}
}

func (x *WinLine) GetMark() MarkType {
	if x != nil {
		return x.Mark
	}
	return MarkType_MARK_TYPE_UNSPECIFIED
}

func (x *WinLine) GetStart() *Move {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *WinLine) GetEnd() *Move {
	if x != nil {
		return x.End
	}
	return nil
}

var File_base_proto protoreflect.FileDescriptor

var file_base_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x22, 0x2a, 0x0a, 0x04, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x6f,
	0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x72, 0x6f, 0x77, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x6f, 0x6c, 0x22, 0x6a,
	0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x6c, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x77, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x89, 0x01, 0x0a, 0x07, 0x57,
	0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x25, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x48, 0x01, 0x52, 0x03, 0x65, 0x6e,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x65, 0x6e, 0x64, 0x2a, 0x50, 0x0a, 0x08, 0x4d, 0x61, 0x72, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x41, 0x52, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a,
	0x0f, 0x4d, 0x41, 0x52, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x52, 0x4f, 0x53, 0x53,
	0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x41, 0x52, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4e, 0x4f, 0x55, 0x47, 0x48, 0x54, 0x10, 0x02, 0x2a, 0x42, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4c, 0x49, 0x45,
	0x4e, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x10,
	0x00, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x47, 0x49, 0x56, 0x45, 0x5f, 0x55, 0x50, 0x10, 0x01, 0x2a, 0x70, 0x0a, 0x0a,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x17, 0x47, 0x41,
	0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x41, 0x4d, 0x45, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x47,
	0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x54, 0x49, 0x45, 0x10, 0x02,
	0x12, 0x1c, 0x0a, 0x18, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x8e,
	0x01, 0x0a, 0x09, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x61, 0x75, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x16,
	0x53, 0x54, 0x4f, 0x50, 0x5f, 0x43, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x54, 0x4f, 0x50,
	0x5f, 0x43, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43,
	0x54, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x4f, 0x50, 0x5f, 0x43, 0x41, 0x55, 0x53,
	0x45, 0x5f, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x54, 0x4f,
	0x50, 0x5f, 0x43, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f,
	0x4d, 0x4f, 0x56, 0x45, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x54, 0x4f, 0x50, 0x5f, 0x43,
	0x41, 0x55, 0x53, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x04, 0x42,
	0x25, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x01, 0x5a, 0x0a, 0x2f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_base_proto_rawDescOnce sync.Once
	file_base_proto_rawDescData = file_base_proto_rawDesc
)

func file_base_proto_rawDescGZIP() []byte {
	file_base_proto_rawDescOnce.Do(func() {
		file_base_proto_rawDescData = protoimpl.X.CompressGZIP(file_base_proto_rawDescData)
	})
	return file_base_proto_rawDescData
}

var file_base_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_base_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_base_proto_goTypes = []interface{}{
	(MarkType)(0),      // 0: base.MarkType
	(ClientAction)(0),  // 1: base.ClientAction
	(GameStatus)(0),    // 2: base.GameStatus
	(StopCause)(0),     // 3: base.StopCause
	(*Move)(nil),       // 4: base.Move
	(*GameParams)(nil), // 5: base.GameParams
	(*WinLine)(nil),    // 6: base.WinLine
}
var file_base_proto_depIdxs = []int32{
	0, // 0: base.GameParams.mark:type_name -> base.MarkType
	0, // 1: base.WinLine.mark:type_name -> base.MarkType
	4, // 2: base.WinLine.start:type_name -> base.Move
	4, // 3: base.WinLine.end:type_name -> base.Move
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_base_proto_init() }
func file_base_proto_init() {
	if File_base_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_base_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Move); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WinLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_base_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_base_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_base_proto_goTypes,
		DependencyIndexes: file_base_proto_depIdxs,
		EnumInfos:         file_base_proto_enumTypes,
		MessageInfos:      file_base_proto_msgTypes,
	}.Build()
	File_base_proto = out.File
	file_base_proto_rawDesc = nil
	file_base_proto_goTypes = nil
	file_base_proto_depIdxs = nil
}
